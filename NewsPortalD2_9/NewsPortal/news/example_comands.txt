# Что вы должны сделать в консоли Django?

>>> from django.db import models
>>> from django.contrib.auth import models as auth_models
>>> from news.models import *

# Создать двух пользователей (с помощью метода User.objects.create_user('username')).

>>> User1 = auth_models.User.objects.create_user('Пушкин')
>>> User2 = auth_models.User.objects.create_user('Гоголь')


# Создать два объекта модели Author, связанные с пользователями.

>>> author1 = Author.objects.create(author = User1)
>>> author2 = Author.objects.create(author = User2)

# Добавить 4 категории в модель Category.

>>> category1 = Category.objects.create(name = 'политика')
>>> category2 = Category.objects.create(name = 'спорт')
>>> category3 = Category.objects.create(name = 'культура')
>>> category4 = Category.objects.create(name = 'афиша')

# Добавить 2 статьи и 1 новость.

>>> post1 = Post.objects.create(author = author1, type = 'N', title = "Участник «Битвы шефов» Павел Чеша сгорел в своем ресторане в Краснодаре", text = "Участник «Битвы шефов» Павел Чеша сгорел в своем ресторане «У Шефа на Комарова» в Краснодаре. Об этом сообщает РИА Новости со ссылкой на правоохранительные органы.Информацию о трагическом инциденте подтвердили в социальных сетях заведения.«Заведение больше не работает <...>. Пожалуйста, без лишних вопросов. Благодарим за понимание», — указано в сообщении.Причина, по которой произошел пожар на кухне заведения, в данный момент устанавливается — одной из версий является короткое замыкание электропроводки. У Павла осталась супруга и шестимесячная дочь. Шеф-повар участвовал в шоу «Битва шефов» и «Кондитер-5».До этого жителю Перми, 17-летнему молодому человеку, который поджег свою 15-летнюю девушку, смягчили наказание, сократив срок заключения на месяц.Решение сократить срок принято из-за того, что уголовное преследование по ст. 167 УК РФ («Умышленные уничтожение или повреждение имущества») было прекращено в связи с истечением срока давности.Ранее в Марий Эл ребенок устроил пожар в квартире и чуть не задохнулся в дыму вместе с сестрой.")
>>> post2 = Post.objects.create(author = author2, type = 'A', title = "Это когда ничего нет, но оно есть. Как перевернуть здравый смысл, изучив концепцию нулевой точки?", text = """Помните фразу Фридриха Ницше "Когда долго всматриваешься в бездну, бездна начинает всматриваться в тебя"? Эта цитата наилучшим образом подходит для описания предмета нашей беседы.Представьте себе разогретый брусок или камень. Он состоит из частичек, которые постоянно перемещаются в пространстве. Мера движения этих частиц описывается температурой, а конкретные значения этой температуры определяют тепловую энергию. Согласно теории возможно такое состояние, что при нулевой температуре по шкале Кельвина наступает абсолютный покой. Все частицы замирают. При этом энергия этой системы тоже нулевая.Получается, что теоретически возможно такое состояние, когда классическая система (наш многострадальный брусок или камень) будет обладать нулевой энергией. Говоря простым языком - это полное отсутствие энергии. Теперь переходим к самому интересному. Рассмотрим квантовые системы.В этой области существует такое невероятно интересное понятие, как энергия нулевой точки. И, забегая вперёд, сразу скажу, что по сути это энергия абсолютной пустоты, из которой возможно даже сгенерировать частички (но про это отдельно).Энергия нулевой точки относится к минимально возможной энергии, которую может иметь квантово-механическая система, даже когда она находится в своем основном состоянии (состоянии с минимальной энергией). В отличие от классических систем (как наш брусок), где система при нулевой температуре имела бы нулевую энергию, квантовые системы все еще обладают некоторой остаточной энергией из-за присущей квантовой механике неопределенности""")
>>> post3 = Post.objects.create(author = author2, type = 'A', title = "Клиенты Райффайзенбанка вывели ₽120 млрд перед отменой переводов в валюте", text = """За август клиенты Райффайзенбанка — граждане и бизнес — вывели со счетов более 120 млрд руб. Отток оказался максимальным почти за полтора года. Это произошло перед анонсированной банком остановкой валютных переводов со 2 сентября В августе Райффайзенбанк столкнулся с изменением поведения ключевых групп клиентов — негосударственных компаний и физических лиц, следует из его оборотной ведомости, которую изучил РБК. За месяц остатки на счетах юридических лиц (счет 407) сократились на 56,2 млрд руб., или на 9,6%, до 531 млрд руб. на 1 сентября. За тот же период объем средств на счете 408 упал на 64,9 млрд руб. (минус 11,7%), до 490,5 млрд руб. На нем помимо средств населения также аккумулируются деньги индивидуальных предпринимателей и юрлиц-нерезидентов, но из докризисной, более детализированной отчетности Райффайзенбанка следует, что остатки на 408-м счете формировались преимущественно за счет сбережений граждан. В абсолютном выражении отток со счетов юрлиц и физлиц в Райффайзенбанке (итого 121,1 млрд руб.) стал максимальным с мая 2023 года, то есть за все время раскрытия отчетности кредитных организаций в новом формате. Если сравнивать с другими участниками рынка, то Райффайзенбанк в августе вошел в топ-3 по оттоку клиентских""")


# Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
>>> post1.category.add(category1)
>>> post2.category.add(category3)
>>> post2.category.add(category4)

# Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

>>> coment1 = Comment.objects.create(post = post1, author = user1, text = "Хорошая новость")
>>> coment2 = Comment.objects.create(post = post1, author = user2, text = "Хорошая новость")
>>> coment3 = Comment.objects.create(post = post2, author = user2, text = "Мне не понравилось")
>>> coment4 = Comment.objects.create(post = post3, author = user1, text = "Забавно")

# Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.

>>> post1.like()
>>> post1.like()
>>> post1.like()
>>> post1.dislike()
>>> post2.like()
>>> post2.like()
>>> post3.like()
>>> post3.like()

>>> coment1.like()
>>> coment1.like()
>>> coment3.like()
>>> coment4.dislike()


# Обновить рейтинги пользователей.

>>> author1 = Author.objects.get(pk = 1)
>>> author2 = Author.objects.get(pk = 2)
>>> author1.update_rating()
>>> author2.update_rating()

# Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

>>> Author.objects.order_by('-rating').values("author__username","rating").first()
{'author__username': 'Гоголь', 'rating': 13}

# Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.

>>> Post.objects.order_by('rating').values("date","author__author__username","rating","title").last()
{'date': datetime.datetime(2024, 9, 26, 6, 16, 13, 836255), 'author__author__username': 'Пушкин', 'rating': 2, 'title': 'Участник «Битвы шефов» Павел Чеша сгорел в своем ресторане в Краснодаре'}
>>> best_post = Post.objects.order_by('rating').last()
>>> best_post.preview()
'Участник «Битвы шефов» Павел Чеша сгорел в своем ресторане «У Шефа на Комарова» в Краснодаре. Об этом сообщает РИА Новости с...'

# Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

>>> best_post = Post.objects.order_by('rating').last()
>>> Comment.objects.filter(post = best_post).values("datatime","author__username", "rating","text")
<QuerySet [{'datatime': datetime.datetime(2024, 9, 26, 7, 41, 53, 231100), 'author__username': 'Пушкин', 'rating': 2, 'text': 'Хорошая новость'}, {'datatime': datetime.datetime(2024, 9, 26, 7, 42, 54, 542518), 'author__username': 'Гоголь', 'rating': 0, 'text': 'Хорошая новость'}]>